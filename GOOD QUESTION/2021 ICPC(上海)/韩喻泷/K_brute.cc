#include <bits/stdc++.h>
using namespace std;
typedef __int128 ll;

FILE *output;

void print(ll x, int n) {
    for(int i = n - 1; i >= 0; i--) {
        if((x >> i) & 1) {
            fprintf(output, "1");
        } else fprintf(output, "0");
    }
}

string update(string s) {
    int n = s.length();
    string t = "";
    for(int i = 0; i < n; i++) {
        t += '0';
    }
    for(int i = 0; i < n; i++) {
        if(s[i] == '1') {
            int j = i - 1;
            int k = i + 1;
            t[i] = '0';
            if(!((j >= 0 && (s[j] == '1')) ||
               (j - 1 >= 0 && (s[j - 1] == '1')))) {
                if(j >= 0 && j < n)
                   t[j] = '1';
            }
            if(!((k < n && (s[k] == '1')) ||
               (k + 1 < n && (s[k + 1] == '1')))) {
                if(k >= 0 && k < n)
                   t[k] = '1';
            }
        }
    }
    // cout << "s: " << s << " t: " << t << endl;
    return t;
}

bool ok(ll x, int n) {
    string s = "";
    for(int i = n - 1; i >= 0; i--) {
        if((x >> i) & 1) {
            s += '1';
        } else {
            s += '0';
        }
    }
    set<string> st;
    st.insert(s);
    for(int i = 1; i <= 2 * n; i++) {
        s = update(s);
        bool f = 0;
        for(int i = 0; i < n; i++) {
            if(s[i] == '1') {
                f = 1;
                break;
            }
        }
        if(!f) {
            return 0;
        }
        if(st.find(s) != st.end()) {
            return 1;
        }
        st.insert(s);
    }
    return 0;
}

void solve(int n) {
    bool f = 0;
    ll I = 1;
    // for(ll s = 1; s < (I << (n-1)) - 1; s++) {
    //     if(ok(s, n)) {
    //         f = 1;
    //         print(s, n);
    //         fprintf(output, ",\n");
    //         return;
    //     }
    // }
    // for(ll s = (I << (n-1)); s < (I << n) - 1; s++) {
    //     if(ok(s, n)) {
    //         f = 1;
    //         print(s, n);
    //         fprintf(output, ",\n");
    //         return;
    //     }
    // }
    ll tx = n - 15;
    for(ll s = (I << tx); s < (I << (n)) - 1; s += (I << tx)) {
        if(ok(s, n)) {
            f = 1;
            print(s, n);
            fprintf(output, ",\n");
            return;
        }
    }
    for(ll s = 1; s < (I << tx) - 1; s += (I << tx)) {
        if(ok(s, n)) {
            f = 1;
            print(s, n);
            fprintf(output, ",\n");
            return;
        }
    }
    if(!f) {
        fprintf(output, "-1,\n");
    }
}

string ans[150] = {
"0",
"-1",
"10",
"-1",
"1000",
"10000",
"100110",
"1000110",
"10000000",
"100000000",
"1000000001",
"10000000000",
"100000000001",
"1000000000001",
"10000000101000",
"100000000001000",
"1000000000000000",
"10000000000000000",
"100000000000000001",
"1000000000000000000",
"10000000000010100000",
"100000000000000100101",
"1000000000000000000001",
"10000000000000000000000",
"100000000000000110000000",
"1000000000000000110000000",
"10000000000000000000000001",
"100000000000000000000000001",
"1000000000000000000000000001",
"10000000000000000000000000001",
"100000000000000100100000010000",
"1000000000000000000000000001000",
"10000000000000000000000000000000",
"100000000000000000000000000000000",
"1000000000000000000000000000000001",
"10000000000000000000000000000000000",
"100000000000000000000100001000010101",
"1000000000000000000000000001000010010",
"10000000000000000000000000000000000001",
"100000000000000000000000000000000000000",
"1000000000000000000000000011000000000000",
"10000000000000000000000000101000000000000",
"100000000000000000000000000110000000000000",
"1000000000000000000000000000110000000000000",
"10000000000000000000000000000001011000100110",
"100000000000000000000000000000000000010010110",
"1000000000000000000000000000000000000000000001",
"10000000000000000000000000000000000000000000000",
"100000000000000000000000000000011000000000000000",
"1000000000000000000000000000000011000000000000000",
"10000000000000000000000000000000101000000000000000",
"100000000000000000000000000000000110000000000000000",
"1000000000000000000000000000000000110000000000000000",
"10000000000000000000000000000000001010000000000000000",
"100000000000000000000000000000000000000000000000000001",
"1000000000000000000000000000000000000000000000000000001",
"00000000000000000000011001000010011000000000000000000000",
"-1",
"-1",
"00000100000011000000000000000000000000000000000000000000000",
"000000100100001000000000000000000000000000000000000000000000",
"0000000000000110000000000000000000000000000000000000000000000",
"-1",
"-1",
"0000000000000010000000000000000000000000000000000000000000000000",
"00000000000000100000000000000000000000000000000000000000000000000",
"-1",
"0000000000000010000000000000000000000000000000000000000000000000000",
"-1",
"-1",
"-1",
"00000000000000100000000000000000000000000000000000000000000000000000000",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"000110011000110000000000000000000000000000000000000000000000000000000000000000",
"0000000000000010000000000000000000000000000000000000000000000000000000000000000",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"0000100101100110000000000000000000000000000000000000000000000000000000000000000000000000000000",
"00000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"-1",
"000110010000011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
};

int main() {
    // output = fopen("output.txt", "w");
    // fprintf(output, "0\n");
    // for(int i = 57; i <= 123; i++) {
    //     printf("%d\n", i);
    //     solve(i);
    // }
    // fclose(output);
    int n;
    cin >> n;
    if(ans[n] == "-1") {
        cout << "Unlucky" << endl;
    } else {
        cout << ans[n] << endl;
    }
    return 0;
}